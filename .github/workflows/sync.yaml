on: push
concurrency: sync
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - id: generate-matrix
        run: |
          echo 'matrix={"include":[{"customer":"one.example.com","slack-channel":"","dryrun":"true"},{"customer":"two.example.com","slack-channel":"","dryrun":"true"}]}' >> $GITHUB_OUTPUT
  sync:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Print matrix leg inputs
        run: |
          set -x
          echo "customer: ${{matrix.customer}}"
          echo "dryrun: ${{matrix.dryrun}}"
      - name: Generate args for syncer
        id: sync-args
        run: |
          set -x
          DRY_RUN="${{ matrix.dryrun }}"
          [[ "${DRY_RUN}" != "" ]] || DRY_RUN="false"
          ARGS="--dry-run=${DRY_RUN} --only-customer=\"${{ matrix.customer }}\""
          echo "args=${ARGS}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Sync
        run: |
          set -x
          mkdir -p /tmp/synclogs
          echo '2024-03-01T18:43:12.9335007Z Error: image "registry/image:latest" has not been signed in the last 72h0m0s (last: 2024-02-23 17:01:02 +0000 UTC)' | tee "/tmp/synclogs/sync.log"
          if [ ${{matrix.customer}} -eq "two.example.com" ]; then
            echo '2024-03-01T18:43:12.9335007Z Error: image "registry/image2:latest" has not been signed in the last 72h0m0s (last: 2024-02-23 17:01:02 +0000 UTC)' | tee "/tmp/synclogs/sync.log"
          fi

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sync-${{ matrix.customer }}
          path: /tmp/synclogs/sync.log
          retention-days: 1

  roundup:
    runs-on: ubuntu-latest
    needs: sync
    if: ${{ always() }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          path: /tmp/synclog
          pattern: 'sync-*'
      - name: Test
        run: |
          find /tmp/synclog -name 'sync.log' -exec cat {} + | grep 'Error: image' > /tmp/errors

      - name: Sum
        run: |
          python << SCRIPT
            import pathlib
            import re

            IMAGE_PATTERN = re.compile(r"image \"([\w\.-]+\/[\w\.-]+\/[\w\.-]+:[\w\.-]+)\"")
            ERRORS = {}
            for log_file in pathlib.Path("/tmp/synclogs").glob('**/sync.log'):
                with open(log_file, 'r', encoding="utf-8") as file:
                    for line in file:
                        if 'Error: image' in line:
                            match = IMAGE_PATTERN.search(line)
                            if match:
                                image = match.group(1)
                                if image not in ERRORS:
                                    ERRORS[image] = set()
                                index = line.index(image)
                                errstring = line[index + len(image) + 2:].strip()
                                ERRORS[image].add(errstring)

            SUMMARY = """
            | Image | Error |
            | ----- | ------- |
            """
            for image, errs in ERRORS.items():
                for err in errs:
                    print(image, err)
                    SUMMARY += f"| {image} | {err} |\n"

            pathlib.Path("/tmp/summary.md").write_text(SUMMARY, encoding="utf-8")
          SCRIPT

          cat /tmp/summary.md >> $GITHUB_STEP_SUMMARY
