on: push
concurrency: sync
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - id: generate-matrix
        run: |
          echo 'matrix={"include":[{"customer":"one.example.com","slack-channel":"","dryrun":"true"},{"customer":"two.example.com","slack-channel":"","dryrun":"true"}]}' >> $GITHUB_OUTPUT
  sync:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Print matrix leg inputs
        run: |
          set -x
          echo "customer: ${{matrix.customer}}"
          echo "dryrun: ${{matrix.dryrun}}"
      - name: Generate args for syncer
        id: sync-args
        run: |
          set -x
          DRY_RUN="${{ matrix.dryrun }}"
          [[ "${DRY_RUN}" != "" ]] || DRY_RUN="false"
          ARGS="--dry-run=${DRY_RUN} --only-customer=\"${{ matrix.customer }}\""
          echo "args=${ARGS}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Sync
        run: |
          set -x
          mkdir -p /tmp/synclogs
          echo "Error: this is a log line for ${{ matrix.customer }}" | tee "/tmp/synclogs/${{ matrix.customer }}.log"

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.customer }}.log
          path: /tmp/synclogs/sync.log
          retention-days: 1

  roundup:
    runs-on: ubuntu-latest
    needs: sync
    if: ${{ always() }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          path: /tmp/synclog
          pattern: *.log
      - name: Test
        run: |
          find /tmp/synclog

